{"version":3,"sources":["component/quote-box/quoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteBox","author","quote","request","id","className","onClick","href","App","useState","setQuote","setAuthor","rand","Math","floor","random","fetch","then","response","json","data","text","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAWeA,EAVA,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,QAAjB,OACX,sBAAKC,GAAG,YAAR,UACI,mBAAGA,GAAG,OAAN,SAAcF,IACd,sBAAME,GAAG,SAAT,SAAmBH,IACnB,sBAAKI,UAAU,SAAf,UACA,wBAAQD,GAAG,YAAYE,QAAS,kBAAKH,KAArC,uBACA,4BAAG,mBAAGC,GAAG,cAAcG,KAAK,2BAAzB,4BCcIC,MAnBf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA4BD,mBAAS,IAArC,mBAAOR,EAAP,KAAeU,EAAf,KACMC,EAAK,kBAAMC,KAAKC,MAAoB,IAAdD,KAAKE,WAC3BZ,EAAS,WACb,OACAa,MAAM,+BACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAQV,EAASU,EAAKR,KAAQS,MAAOV,EAAUS,EAAKR,KAAQX,YAIpE,OADAqB,qBAAU,kBAAKnB,MAAU,IAEvB,qBAAKE,UAAU,MAAf,SACE,cAAC,EAAD,CAAUH,MAAOA,EAAOD,OAAQA,EAAQE,QAASA,OCJxCoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.1e4fc93b.chunk.js","sourcesContent":["import './quoteBox.styles.css'\nconst QuoteBox=({author, quote, request})=>(\n    <div id=\"quote-box\">\n        <p id='text'>{quote}</p>\n        <span id=\"author\">{author}</span>\n        <div className=\"button\">\n        <button id=\"new-quote\" onClick={()=> request()}>New Quote</button>\n        <i><a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\">Tweet</a></i>\n        </div>\n    </div>\n)\nexport default QuoteBox","import QuoteBox from './component/quote-box/quoteBox';\nimport {useState, useEffect} from 'react'\nfunction App() {\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState('');\n  const rand=()=> (Math.floor(Math.random()*100))\n  const request =() => {\n    return(\n    fetch(\"https://type.fit/api/quotes\")\n    .then(response=> response.json())\n    .then(data=> {setQuote(data[rand()].text); setAuthor(data[rand()].author)})\n    );\n  }\n  useEffect(()=> request(),[])\n  return (\n    <div className=\"App\">\n      <QuoteBox quote={quote} author={author} request={request}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}